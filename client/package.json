{
  "name": "api-workbench-vscode",
  "description": "VSCode client for API Workbench server",
  "author": "Mulesoft",
  "publisher": "Mulesoft",
  "version": "0.0.4",
  "engines": {
    "vscode": "^1.18.0"
  },
  "categories": [
    "Languages", "Linters", "Themes"
  ],
  "activationEvents": [
    "onLanguage:raml"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "commands": [
      {
        "command": "raml.action.commentnode",
        "title": "Comment node"
      },
      {
        "command": "raml.action.deletenode",
        "title": "Delete current node"
      },
      {
        "command": "raml.action.expandtypetojsonschema",
        "title": "Expand type to JSON schema"
      },
      {
        "command": "raml.action.expandtypetojsonschemadefinition",
        "title": "Expand type to JSON schema definition"
      },
      {
        "command": "raml.action.completebody",
        "title": "Complete body"
      },
      {
        "command": "raml.action.newmethod",
        "title": "New method"
      },
      {
        "command": "raml.action.create_new_body",
        "title": "Create new Body"
      },
      {
        "command": "raml.action.create_new_header",
        "title": "Create new Header"
      },
      {
        "command": "raml.action.create_new_property",
        "title": "Create new Property"
      },
      {
        "command": "raml.action.create_new_query_parameter",
        "title": "Create new Query Parameter"
      },
      {
        "command": "raml.action.create_new_response",
        "title": "Create new Response"
      },
      {
        "command": "raml.action.create_new_response_body",
        "title": "Create new Response Body"
      },
      {
        "command": "raml.action.create_new_response_header",
        "title": "Create new Response Header"
      },
      {
        "command": "raml.action.create_new_uri_parameter",
        "title": "Create new URI Parameter"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "raml.action.commentnode.enabled == true",
          "command": "raml.action.commentnode",
          "group": "Code"
        },
        {
          "when": "raml.action.deletenode.enabled == true",
          "command": "raml.action.deletenode",
          "group": "Code"
        },
        {
          "when": "raml.action.expandtypetojsonschema.enabled == true",
          "command": "raml.action.expandtypetojsonschema",
          "group": "Refactoring"
        },
        {
          "when": "raml.action.expandtypetojsonschemadefinition.enabled == true",
          "command": "raml.action.expandtypetojsonschemadefinition",
          "group": "Refactoring"
        },
        {
          "when": "raml.action.completebody.enabled == true",
          "command": "raml.action.completebody",
          "group": "Add new..."
        },
        {
          "when": "raml.action.newmethod.enabled == true",
          "command": "raml.action.newmethod",
          "group": "Add new..."
        },
        {
          "when": "raml.action.create_new_body.enabled == true",
          "command": "raml.action.create_new_body",
          "group": "Add new..."
        },
        {
          "when": "raml.action.create_new_header.enabled == true",
          "command": "raml.action.create_new_header",
          "group": "Add new..."
        },
        {
          "when": "raml.action.create_new_property.enabled == true",
          "command": "raml.action.create_new_property",
          "group": "Add new..."
        },
        {
          "when": "raml.action.create_new_query_parameter.enabled == true",
          "command": "raml.action.create_new_query_parameter",
          "group": "Add new..."
        },
        {
          "when": "raml.action.create_new_response.enabled == true",
          "command": "raml.action.create_new_response",
          "group": "Add new..."
        },
        {
          "when": "raml.action.create_new_response_body.enabled == true",
          "command": "raml.action.create_new_response_body",
          "group": "Add new..."
        },
        {
          "when": "raml.action.create_new_response_header.enabled == true",
          "command": "raml.action.create_new_response_header",
          "group": "Add new..."
        },
        {
          "when": "raml.action.create_new_uri_parameter.enabled == true",
          "command": "raml.action.create_new_uri_parameter",
          "group": "Add new..."
        }
      ]
    },
    
    "configuration": {
      "type": "object",
      "title": "API Workbench for VS Code configuration",
      "properties": {
        "languageServerExample.maxNumberOfProblems": {
          "type": "number",
          "default": 100,
          "description": "Controls the maximum number of problems produced by the server."
        },
        "languageServerExample.trace.server": {
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VSCode and the languageServerExample service."
        }        
      }
    },
		"languages": [{
			"id": "raml",
			"aliases": ["RAML", "raml"],
			"extensions": [".raml"],
			"configuration": "./raml.configuration.json"
		}, {
			"id": "sjson",
			"aliases": ["SJSON", "sjson"],
			"extensions": [".sjson"],
			"configuration": "./sjson.configuration.json"
		}, {
			"id": "syaml",
			"aliases": ["SYAML", "syaml"],
			"extensions": [".syaml"],
			"configuration": "./syaml.configuration.json"
		}],
		"grammars": [{
			"language": "raml",
			"scopeName": "source.raml",
			"path": "./syntaxes/raml.json"
		}, {
			"language": "sjson",
			"scopeName": "source.sjson",
			"path": "./syntaxes/sjson.json"
    }, {
			"language": "syaml",
			"scopeName": "source.syaml",
			"path": "./syntaxes/syaml.json"
		}]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "npm run compile && node ./node_modules/vscode/bin/test"
  },
  "devDependencies": {
    "@types/mocha": "^2.2.33",
    "@types/node": "^6.0.52",
    "@types/socket.io": "*",
    "typescript": "^2.1.5",
    "vscode": "^1.1.9"
  },
  "dependencies": {
    "vscode-languageclient": "^3.5.0",
    "raml-language-server": "0.0.4",
    "socket.io": "2.0.4"
  }
}
